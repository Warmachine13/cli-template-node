"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"CreateUseCase",{enumerable:true,get:()=>CreateUseCase});const _errors=require("../entities/errors/index");const _constants=require("../../constants/index");class CreateUseCase{handle(pathFull,name="UseCase",test=true){const fileInString=this.fileStorage.readFileString({path:this.pathResolver.pathresolve(__dirname,_constants.PATH_USE_CASE)});if(!fileInString){throw new _errors.FileNotFound}const replacedFileString=fileInString.replace(new RegExp("{{ className }}","g"),name);if(!this.fileStorage.folderExists({path:`${pathFull}/domain/use-cases/`})){this.fileStorage.makeDir({path:`${pathFull}/domain/use-cases/`})}const pathToWrite=this.pathResolver.pathresolve(`${pathFull}/domain/use-cases/${name}.ts`);this.logger.log({message:`
 diretorio do Usecase ${pathToWrite}`});this.fileStorage.writeFileString({path:pathToWrite,content:replacedFileString});if(test){}return replacedFileString}constructor(fileStorage,pathResolver,logger){this.fileStorage=fileStorage;this.pathResolver=pathResolver;this.logger=logger}}